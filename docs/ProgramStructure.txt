Directory structure:

Legacy data directories for the script-based install:
./boot
./evok
./misc
./opt
./pigpio
./UniPiDali
./usr

Data directories used for both package-based and script-based install:
./etc
./var
./www
./tornadorpc_evok

Source directory:
./evok

Documentation directory:
./docs

Source structure:

apigpio.py
I2C and pigpio bus classes; unchanged from the UniPi 1.1 version

config.py
Alias parsing, config parsing, EEPROM parsing

devents.py
Simple callback event classes

devices.py
Device classes, device dictionaries, sensor return value type dictionary

evok.py
Main entry function, web handler classes including implementation

extcontrols.py
Legacy scripting system; unchanged from the UniPi 1.1 version

hwnames.py
List of board names indexed by firmware combination id

log.py
Global logger instance

modbus_tornado.py
Legacy ModBus server for UniPi 1.1 Mervis integration; unchanged from the UniPi 1.1 version

modbus_unipi.py
Legacy classes for the ModBus server for UniPi 1.1 Mervis integration; unchanged from the UniPi 1.1 version

modbusclient_rs485.py
Implementation of an asynchonous PyModBus RS485 client, including internals, e.g. framer

modbusclient_tornado.py
Implementation of an asynchonous wrapper for the PyModBus TCP client

neuron.py
ModBus cache implementation, Neuron/Axon device implementations, hw_defines parsing

owclient.py
1Wire bus implementation, including legacy 1Wire without scanning; also includes wrapper classes for sensors

remotearm.py
Legacy PyModbus RS485 implementation; unchanged from the UniPi 1.1 version

rpc_handler.py
RPC handler callbacks, used for both UniPi 1.1 and Neuron/Axon

schemas.py
JSON Schemas used to verify input/output to the web API, used for both UniPi 1.1 and Neuron/Axon

unipidali.py
UniPi driver for the PythonDali library

unipig.py
UniPi 1.1 device implementations


