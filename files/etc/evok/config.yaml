# EVOK CONFIGURATION FILE

#   +------------------+
#   | Autogen settings |
#   +------------------+
autogen: true
# ^ if autogen is enabled, '/etc/evok/autogen.yaml' will be included.
# ^ Autogen file is generated by unipi-os-configurator if installed.
# ^ The file contain basic hw_tree configuration for your device.

#   +------------------+
#   | Logging settings |
#   +------------------+
logging:
  level: ERROR
  # ^ Minimum severity of messages to be logged, where minimum is CRITICAL.
  # ^ Options: [CRITICAL, ERROR, WARNING, INFO, DEBUG]
  file: /var/log/evok.log

#   +--------------+
#   | API settings |
#   +--------------+
apis:
  port: 80
  # ^ API listen port
  # ^ only change if you are certain you know what you are doing
  # ^ FOR OUR WEB INTERFACE THE PORT SHOULD BE CHANGED IN "/etc/evok-nginx.conf" TOO !!!

  websocket:
    all_filtered: False
    # ^ 'All' WebSocket requests will be subject to the filtering set by 'filter'

  webhook:
    enabled: False
    address: http://127.0.0.1:80
    device_mask: ["input","wd"]
    # ^ List of device types to notify on (written as a JSON list) - adding AI will generate a large amount of messages!
    complex_events: False
    # ^ EVOK will send POST requests with the same data as WebSocket, rather than an empty GET request

#   +------------------------+
#   | Hardware Configuration |
#   +------------------------+
# hw_tree is list of connected devices and theirs settings.
# Here you can define your connected extensions.

# ----------- STRUCTURE -----------

# hw_tree:
#   <bus_name>
#     type: <bus_type>
#     <specific settings>
#     devices:
#       <device_name>:
#         slave-id: <slave_id>
#         model: <model_id>

# notes:
#   <bus_name>: Your choice, but cannot be duplicates!
#   <bus_type>:
#       - MODBUSTCP (specific settings: [hostname, port])
#       - MODBUSRTU (specific settings: [port, boudrate, parity])
#   <device_name>: Your choice, but cannot be duplicates!
#   <model_id>: Defines a modbus register map. Source is in '/etc/evok/hw_definitions'.
#               ^ examples [xS51, xS11, ]


# ----------- EXAMPLES -----------
#hw_tree:
#  RS485_1:
#    type: MODBUSRTU
#    port: /dev/ttyNS0
#    baudrate: 19200
#    parity: 'N'
#    devices:
#      xS51:
#        slave-id: 1
#        model: xS51
#      my_device_name_1:
#        slave-id: 5
#        model: xS11
#  RS485_2:
#    type: MODBUSRTU
#    port: /dev/ttyNS1
#    baudrate: 9600
#    parity: 'N'
#    devices:
#      my_device_name_2:
#        slave-id: 1
#        model: xS51
#  EXT_TCP:
#    type: MODBUSTCP
#    hostname: 192.168.0.54
#    port: 502
#    devices:
#      my_device_name_3:
#        slave-id: 1
#        model: B1000
#  MY_TCP:
#    type: MODBUSTCP
#    hostname: 192.168.0.55
#    port: 502
#    devices:
#      my_device_name_4:
#        slave-id: 11
#        model: my_modbus_map